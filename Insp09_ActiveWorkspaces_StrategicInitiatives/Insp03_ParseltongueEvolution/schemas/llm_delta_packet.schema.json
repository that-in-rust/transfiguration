{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/schemas/llm_delta_packet.schema.json",
  "title": "LLM Delta Packet",
  "type": "object",
  "additionalProperties": true,
  "required": ["node", "api", "change"],
  "properties": {
    "node": {
      "type": "object",
      "required": ["hash", "kind", "canonical_path", "file", "span", "cfg_active"],
      "properties": {
        "hash": { "type": "string" },
        "kind": {
          "type": "string",
          "enum": [
            "Function", "Method", "Struct", "Trait", "Impl", "Module", "Type", "Const", "Enum", "Union"
          ]
        },
        "canonical_path": { "type": "string" },
        "file": { "type": "string" },
        "span": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": { "type": "integer", "minimum": 0 }
        },
        "cfg_active": { "type": "boolean" }
      },
      "additionalProperties": true
    },
    "api": {
      "type": "object",
      "required": ["digest", "shape_digest"],
      "properties": {
        "digest": { "type": "string" },
        "shape_digest": { "type": "string" },
        "vis": { "type": "string" },
        "flags": { "type": "array", "items": { "type": "string" } },
        "generics": { "type": "array", "items": { "type": "string" } },
        "where_bounds": { "type": "array", "items": { "type": "string" } }
      },
      "additionalProperties": true
    },
    "effects": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object",
          "properties": {
            "returns_result": { "type": "boolean" },
            "error_types": { "type": "array", "items": { "type": "string" } },
            "uses_anyhow": { "type": "boolean" },
            "panic_sites": { "type": "integer", "minimum": 0 },
            "question_mark_uses": { "type": "integer", "minimum": 0 }
          },
          "additionalProperties": true
        },
        "side_effects": { "type": "array", "items": { "type": "string" } },
        "concurrency": { "type": "array", "items": { "type": "string" } },
        "unsafe_blocks": { "type": "integer", "minimum": 0 },
        "ffi_calls": { "type": "integer", "minimum": 0 }
      },
      "additionalProperties": true
    },
    "coupling": {
      "type": "object",
      "properties": {
        "uses_types": { "type": "array", "items": { "type": "string" } },
        "callers_sample": { "type": "array", "items": { "type": "string" } },
        "callees_sample": { "type": "array", "items": { "type": "string" } }
      },
      "additionalProperties": true
    },
    "control": {
      "type": "object",
      "properties": {
        "ctrl_bits": {
          "oneOf": [
            { "type": "integer", "minimum": 0 },
            { "type": "string", "pattern": "^0x[0-9a-fA-F_]+$" }
          ]
        },
        "cfg_hash": { "type": "string", "pattern": "^0x[0-9a-fA-F_]+$" },
        "exit_kinds": {
          "type": "array",
          "items": { "type": "string", "enum": ["OK", "Err", "None", "Panic"] }
        },
        "await_cnt": { "type": "integer", "minimum": 0, "maximum": 255 },
        "unsafe_cnt": { "type": "integer", "minimum": 0, "maximum": 255 }
      },
      "additionalProperties": true
    },
    "trait_contract": {
      "type": "object",
      "properties": {
        "implements": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "trait": { "type": "string" },
              "via": { "type": "string" }
            },
            "required": ["trait"],
            "additionalProperties": true
          }
        },
        "requires": { "type": "array", "items": { "type": "string" } },
        "assoc_types_defined": { "type": "array", "items": { "type": "string" } }
      },
      "additionalProperties": true
    },
    "doc": {
      "type": "object",
      "properties": {
        "first_line": { "type": "string" },
        "hash": { "type": "string" },
        "tags": { "type": "array", "items": { "type": "string" } }
      },
      "additionalProperties": true
    },
    "change": {
      "type": "object",
      "required": ["kind"],
      "properties": {
        "kind": { "type": "string", "enum": ["added", "removed", "modified"] },
        "api_breakage": { "type": "string", "enum": ["breaking", "non_breaking", "unknown"] },
        "blast_radius_estimate": { "type": "integer", "minimum": 0 },
        "centrality_rank": { "type": "integer", "minimum": 0 }
      },
      "additionalProperties": true
    }
  },
  "examples": [
    {
      "node": {
        "hash": "0x6f91…",
        "kind": "Function",
        "canonical_path": "crate::auth::login",
        "file": "src/auth/login.rs",
        "span": [1234, 1456],
        "cfg_active": true
      },
      "api": {
        "digest": "0x2b8c…",
        "shape_digest": "0x9a71…",
        "vis": "pub",
        "flags": ["async"],
        "generics": ["T"],
        "where_bounds": ["T: Serialize + Send"]
      },
      "control": {
        "ctrl_bits": "0x0000_0321",
        "cfg_hash": "0x9f3a…",
        "exit_kinds": ["OK", "Err"],
        "await_cnt": 1,
        "unsafe_cnt": 0
      },
      "doc": { "first_line": "Logs a user in.", "hash": "0x5ad1…", "tags": ["auth"] },
      "change": { "kind": "modified", "api_breakage": "non_breaking" }
    }
  ]
}
